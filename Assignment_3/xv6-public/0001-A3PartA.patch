From 1eb8afd81500ed49b56cb968f44f104610ed4261 Mon Sep 17 00:00:00 2001
From: PoojaB01 <pooja.bhagat2000@gmail.com>
Date: Tue, 10 Nov 2020 19:23:16 +0530
Subject: [PATCH] A3PartA

---
 sysproc.c |  5 +++--
 trap.c    | 28 +++++++++++++++++++++++++++-
 vm.c      |  5 ++++-
 3 files changed, 34 insertions(+), 4 deletions(-)

diff --git a/sysproc.c b/sysproc.c
index 0686d29..864233e 100644
--- a/sysproc.c
+++ b/sysproc.c
@@ -51,8 +51,9 @@ sys_sbrk(void)
   if(argint(0, &n) < 0)
     return -1;
   addr = myproc()->sz;
-  if(growproc(n) < 0)
-    return -1;
+  // if(growproc(n) < 0)
+  //   return -1;
+  myproc()->sz += n;
   return addr;
 }
 
diff --git a/trap.c b/trap.c
index 41c66eb..052829e 100644
--- a/trap.c
+++ b/trap.c
@@ -8,6 +8,9 @@
 #include "traps.h"
 #include "spinlock.h"
 
+int mappages(pde_t *pgdir, void *va, uint size, uint pa, int perm);
+
+
 // Interrupt descriptor table (shared by all CPUs).
 struct gatedesc idt[256];
 extern uint vectors[];  // in vectors.S: array of 256 entry pointers
@@ -77,7 +80,30 @@ trap(struct trapframe *tf)
             cpuid(), tf->cs, tf->eip);
     lapiceoi();
     break;
-
+    
+  // Assignment 3 Part A
+  case T_PGFLT:
+  	
+  	{
+  		char *page;
+			page = kalloc();
+			if(page == 0)
+			{
+				cprintf("Out of Memory.\n");
+			}
+			else 
+			{
+				memset(page, 0, PGSIZE);
+				
+				// creating page table entry
+				uint a = PGROUNDDOWN(rcr2());
+				mappages(myproc()->pgdir, (char *)a, PGSIZE, V2P(page), PTE_W | PTE_U);
+			}
+		}
+  	
+  	break;
+  	
+  	
   //PAGEBREAK: 13
   default:
     if(myproc() == 0 || (tf->cs&3) == 0){
diff --git a/vm.c b/vm.c
index 7134cff..a38edb2 100644
--- a/vm.c
+++ b/vm.c
@@ -57,7 +57,10 @@ walkpgdir(pde_t *pgdir, const void *va, int alloc)
 // Create PTEs for virtual addresses starting at va that refer to
 // physical addresses starting at pa. va and size might not
 // be page-aligned.
-static int
+
+// Assignment 3 Part A
+// static int
+int
 mappages(pde_t *pgdir, void *va, uint size, uint pa, int perm)
 {
   char *a, *last;
-- 
2.25.1

